<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 주의 : security => sec로 수정 -->
	<!-- <sec:http auto-config = "true" use-expressions= "true" create-session = "never">
		
		관리자 영역 설정
		<sec:intercept-url pattern = "/admin_**" access = "hasRole('ROLE_ADMIN')"/>
		
		권한에 관계없이 접속 가능한 영역(guest도 접속 가능)
		<sec:intercept-url pattern = "/**" access = "permitAll"/>
		
		로그인한 사용자 영역 유저
		<sec:intercept-url pattern = "/user_**" access = "hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		
		로그인 폼(유저)
		username-parameter = "컬럼명" password-parameter = "컬럼명"
		<sec:form-login login-page = "/login_form.do"
					login-processing-url = "/login_pro.do"
					authentication-success-handler-ref = "userLoginSuccessHandler"
					authentication-failure-handler-ref = "userLoginFailureHandler"
					username-parameter = "userID" password-parameter = "userPWD" />
		
		<sec:session-management>
			max-sessions = "1" : 같은 브라우저 여러창에서 동시접속 막기
				 expired-url = "/user/login.do" : 세션 만료시 이동할 주소
				 error-if-maximum-exceeded = "true" : 최대 세션 초과시 에러 옵션
						
			<sec:concurrency-control max-sessions = "2"
				expired-url = "/login_form.do"
				error-if-maximum-exceeded = "true"/>
		</sec:session-management>
		
		접근 권한이 없는 경우의 코드
		<sec:access-denied-handler ref="userDeniedHandler" />
	</sec:http>
	
	<sec:authentication-manager>
        <sec:authentication-provider>
            <sec:user-service>
                <sec:user name="jimi" password="1234" authorities="ROLE_USER, ROLE_ADMIN" />
                <sec:user name="bob" password="1234" authorities="ROLE_USER" />
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>
	
	<bean id = "userLoginSuccessHandler" class = "service.UserLoginSuccessHandler" >
	</bean>
	<bean id = "userLoginFailureHandler" class = "service.UserLoginFailureHandler" >
	</bean>
	
	<bean id = "userDeniedHandler" class = "service.UserDeniedHandler" />
	
	로그인 인증을 처리하는 빈
	주의 : UserAuthenticationService 작성하면 에러 사라짐	
	<bean id = "userService" class = "service.UserAuthenticationService">
	</bean> -->
	
	<!-- 비밀번호 인코딩  -->
	<bean id="bcryptPasswordEncoder" 
		  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	

</beans>
